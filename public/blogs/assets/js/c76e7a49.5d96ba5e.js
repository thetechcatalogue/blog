"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[819],{9785:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=s(6070),t=s(5710);const o={},r=void 0,l={id:"system-design/pre-checklist",title:"pre-checklist",description:"---",source:"@site/docs/system-design/pre-checklist.md",sourceDirName:"system-design",slug:"/system-design/pre-checklist",permalink:"/blogs/docs/system-design/pre-checklist",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/system-design/pre-checklist.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"selecting-architecture",permalink:"/blogs/docs/system-design/selecting-architecture"},next:{title:"system-design-questions-2",permalink:"/blogs/docs/system-design/system-design-questions-2"}},a={},c=[{value:"sidebar_position: 2",id:"sidebar_position-2",level:2},{value:"Basic Stationery Box",id:"basic-stationery-box",level:3},{value:"CAP",id:"cap",level:3}];function d(e){const n={h2:"h2",h3:"h3",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"sidebar_position-2",children:"sidebar_position: 2"}),"\n",(0,i.jsx)(n.h3,{id:"basic-stationery-box",children:"Basic Stationery Box"}),"\n",(0,i.jsx)(n.p,{children:"Design interviews mostly talk about choice the right solution for the problem in hand, but most of solutions are picked up from a box of several choices.\nIn-order for someone to choose from a box, somene must put something in the box , and this is where the box of tools comes into picture."}),"\n",(0,i.jsx)(n.p,{children:"Mostly in interviews a few things are common amongst which you need to make a choice."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Services"}),"\n",(0,i.jsx)(n.li,{children:"Databases"}),"\n",(0,i.jsx)(n.li,{children:"Networks"}),"\n",(0,i.jsx)(n.li,{children:"Caches"}),"\n",(0,i.jsx)(n.li,{children:"Languages"}),"\n",(0,i.jsx)(n.li,{children:"Protocols"}),"\n",(0,i.jsx)(n.li,{children:"Security Options"}),"\n",(0,i.jsx)(n.li,{children:"Operating Systems"}),"\n",(0,i.jsx)(n.li,{children:"Memory Managements"}),"\n",(0,i.jsx)(n.li,{children:"Data Structures"}),"\n",(0,i.jsx)(n.li,{children:"Messaging"}),"\n",(0,i.jsx)(n.li,{children:"Algorithms"}),"\n",(0,i.jsx)(n.li,{children:"integration patterns"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"etc."}),"\n",(0,i.jsx)(n.p,{children:"These can be considered as subsection in your tool-box and you will see you have a pool of choices within each sub-section and you need to make a choice , and in order to do that you need to understand the basic requirement of the problem and then basic capability of that tool , for example to make a hole in a wall you will not take out a pin-hole bit."}),"\n",(0,i.jsx)(n.h3,{id:"cap",children:"CAP"}),"\n",(0,i.jsx)(n.p,{children:"Always Remember Cap theorem: Choose between availability and scalability"}),"\n",(0,i.jsx)(n.p,{children:"Most of the questions will be targeted towards understanding the data ingestion pipelines, and that involve focusing on below issues"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"How various requests to service will be coming ( single/buffered/batch)"}),"\n",(0,i.jsx)(n.li,{children:"How will timeouts be considered depending on type of requests"}),"\n",(0,i.jsx)(n.li,{children:"What will API look like"}),"\n",(0,i.jsx)(n.li,{children:"How does client \u2013 implement a re-try mechanism"}),"\n",(0,i.jsx)(n.li,{children:"Where data is getting stored temporary"}),"\n",(0,i.jsx)(n.li,{children:"How do you deal with duplicates"}),"\n",(0,i.jsx)(n.li,{children:"How do you scale a single service"}),"\n",(0,i.jsx)(n.li,{children:"How the increase in database though through"}),"\n",(0,i.jsx)(n.li,{children:"Which type of database is required."}),"\n",(0,i.jsx)(n.li,{children:"How the incoming requests will be processed and stored."}),"\n",(0,i.jsx)(n.li,{children:"Fault handling and tolerance of the system"}),"\n",(0,i.jsx)(n.li,{children:"Error Handling"}),"\n",(0,i.jsx)(n.li,{children:"What happens when something goes wrong , bottle necks etc."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Concepts while implementing a client"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Blocking vs Non-blocking calls (threads/ asyncs )"}),"\n",(0,i.jsx)(n.li,{children:"Buffering/ batching ? ( example logger client)"}),"\n",(0,i.jsx)(n.li,{children:"timeouts (request timeouts 1% of slowest requests times)"}),"\n",(0,i.jsx)(n.li,{children:"retries  ( retry storm events , overload server with too many request )"}),"\n",(0,i.jsx)(n.li,{children:"exponential backoff and jitter algorithms"}),"\n",(0,i.jsx)(n.li,{children:"circuit breaker"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Below diagram talks a 1 key info you should know about you tools inside the tool box"}),"\n",(0,i.jsx)(n.mermaid,{value:"graph TD;\n  subgraph System Design\n    A[System] --\x3e B[Key Considerations];\n    B --\x3e C[Key Technologies to Remember];\n  end\n  subgraph Algorithms\n    D[Algorithm] --\x3e E[Data Structures];\n    E --\x3e F[Complexity Analysis];\n  end\n  subgraph Data Structures\n    G[Data Structure] --\x3e H[Key Operations];\n    H --\x3e I[Time Complexity];\n  end\n  subgraph Networks\n    J[Network] --\x3e K[Key Concepts];\n    K --\x3e L[Protocols];\n  end\n  subgraph Operating Systems\n    M[Operating System] --\x3e N[Key Concepts];\n    N --\x3e O[Processes];\n  end\n  subgraph Databases\n    P[Database] --\x3e Q[Key Concepts];\n    Q --\x3e R[SQL vs NoSQL , Read and Write Throughput];\n  end\n  subgraph Caches\n    S[Cache] --\x3e T[Key Concepts];\n    T --\x3e U[Eviction Policies , Scale , Sharding];\n  end\n  subgraph Languages\n    V[Language] --\x3e W[Key Concepts];\n    W --\x3e X[Syntax];\n  end\n\n  subgraph Linux Kernels\n    AB[Linux Kernel] --\x3e AC[Key Concepts];\n    AC --\x3e AD[Process Management];\n  end"})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},5710:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var i=s(758);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);