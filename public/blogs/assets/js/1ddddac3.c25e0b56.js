"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[9687],{696:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var n=i(6070),t=i(5710);const r={sidebar_position:3,tags:["system desing"]},a=void 0,o={id:"system-design/establishing-basic-requirements",title:"establishing-basic-requirements",description:"At every moment of interview you will have mto make a choice, in-orde to make a choice , we suggest to adopt a few techniques which will help you to organize your itenrviews into logical sections as well.",source:"@site/docs/system-design/establishing-basic-requirements.md",sourceDirName:"system-design",slug:"/system-design/establishing-basic-requirements",permalink:"/blogs/docs/system-design/establishing-basic-requirements",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/system-design/establishing-basic-requirements.md",tags:[{label:"system desing",permalink:"/blogs/docs/tags/system-desing"}],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,tags:["system desing"]},sidebar:"tutorialSidebar",previous:{title:"intro",permalink:"/blogs/docs/system-design/intro"},next:{title:"selecting-architecture",permalink:"/blogs/docs/system-design/selecting-architecture"}},c={},l=[{value:"Decision matrix",id:"decision-matrix",level:3},{value:"Sequence Diagrams",id:"sequence-diagrams",level:3},{value:"Scenario Walkthrough",id:"scenario-walkthrough",level:3}];function d(e){const s={br:"br",em:"em",h3:"h3",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:"At every moment of interview you will have mto make a choice, in-orde to make a choice , we suggest to adopt a few techniques which will help you to organize your itenrviews into logical sections as well."}),"\n",(0,n.jsx)(s.p,{children:"define how basic requirements for an system design interview  should be established between and interviewer and interviewee."}),"\n",(0,n.jsx)(s.mermaid,{value:"graph LR\nA[Establishing basic requirements] --\x3e B[Understanding the problem]\nA --\x3e C[Ask clarifying Questions]\nA --\x3e D[Define key constraints and boundaries]\nA --\x3e E[Understand the User and Consumer]\nA --\x3e F[Suggest a solution that works]\nA --\x3e G[Refine or improve]"}),"\n",(0,n.jsx)(s.h3,{id:"decision-matrix",children:"Decision matrix"}),"\n",(0,n.jsx)(s.p,{children:"A decision matrix is a visual comparison of how various alternatives stack up against one another. Use a decision matrix to qualify design alternatives so a decision can be made. A decision matrix can also be used in documentation as a part of the design\u2019s rationale."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Use to compare a variety of decisions such as patterns, technologies, or frameworks."}),"\n",(0,n.jsx)(s.li,{children:"Visualize relative strengths and weaknesses among decisions."}),"\n",(0,n.jsx)(s.li,{children:"Focus attention on essential factors when comparing and contrasting alternatives."}),"\n",(0,n.jsx)(s.li,{children:"Facilitate open discussion about trade-offs among alternatives."}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"sequence-diagrams",children:"Sequence Diagrams"}),"\n",(0,n.jsx)(s.p,{children:"example a simple sequence diagram for showing flow of Online - Order Placement Service"}),"\n",(0,n.jsx)(s.mermaid,{value:"graph TD;\n  subgraph Online Order Placement\n    OrderService --\x3e PaymentService;\n    PaymentService --\x3e Bank;\n    OrderService --\x3e WarehouseService;\n    WarehouseService --\x3e InventoryDatabase;\n    WarehouseService --\x3e ShippingService;\n  end"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.em,{children:(0,n.jsx)(s.strong,{children:"BENEFITS"})})," ",(0,n.jsx)(s.br,{}),"\n","Simple and flexible notation ",(0,n.jsx)(s.br,{}),"\n","Useful for communication and reasoning ",(0,n.jsx)(s.br,{}),"\n","Helps to identify missing informations"]}),"\n",(0,n.jsx)(s.h3,{id:"scenario-walkthrough",children:"Scenario Walkthrough"}),"\n",(0,n.jsx)(s.p,{children:"Describe step-by-step how the architecture addresses a specific quality attribute scenario. Scenario walkthroughs can be used any time but are most applicable early in the life of the software system, before the system\u2019s behavior can be observed directly."}),"\n",(0,n.jsx)(s.p,{children:"A scenario walkthrough is like telling a story about the architecture. Pick a quality attribute scenario and describe what the system would do in response to the scenario stimulus. As you walk through the various elements in your design, show how the quality attribute is promoted (or not) by the system."}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.em,{children:(0,n.jsx)(s.strong,{children:"BENEFITS"})})," ",(0,n.jsx)(s.br,{}),"\n","Assess the architecture design early, even while it\u2019s only on paper. ",(0,n.jsx)(s.br,{}),"\n","Identify different concerns in the architecture. ",(0,n.jsx)(s.br,{}),"\n","Reason about how the architecture will respond to different stimuli. ",(0,n.jsx)(s.br,{}),"\n","Qualify the design. Walkthroughs are not strict pass or fail. ",(0,n.jsx)(s.br,{}),"\n","Quickly determine the extent to which the architecture promotes or inhibits different quality attributes."]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},5710:(e,s,i)=>{i.d(s,{R:()=>a,x:()=>o});var n=i(758);const t={},r=n.createContext(t);function a(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);